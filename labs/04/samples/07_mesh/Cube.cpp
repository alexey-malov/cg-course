#include "pch.h"
#include "Cube.h"

/*
   Y
   |
   |
   |
   +---X
  /
 /
Z
   3----2
  /    /|
 /    / |
7----6  |
|  0 |  1
|    | /
|    |/
4----5
*/
Cube::Cube(float size)
	: m_size(size)
	, m_mesh(
		  {
			  { { -1, -1, -1 }, { 255, 255, 255, 255 } }, // 0
			  { { +1, -1, -1 }, { 255, 255, 0, 255 } }, // 1
			  { { +1, +1, -1 }, { 255, 0, 0, 255 } }, // 2
			  { { -1, +1, -1 }, { 255, 0, 255, 255 } }, // 3
			  { { -1, -1, +1 }, { 0, 255, 255, 255 } }, // 4
			  { { +1, -1, +1 }, { 0, 255, 0, 255 } }, // 5
			  { { +1, +1, +1 }, { 0, 0, 255, 255 } }, // 6
			  { { -1, +1, +1 }, { 0, 0, 0, 255 } }, // 7
		  },
		  {
			  4, 7, 3, 0, // грань x<0
			  5, 1, 2, 6, // грань x>0
			  4, 0, 1, 5, // грань y<0
			  7, 6, 2, 3, // грань y>0
			  0, 3, 2, 1, // грань z<0
			  4, 5, 6, 7, // грань z>0
		  },
		  Mesh::PrimitiveType::Quads)
{
}

void Cube::Draw() const
{
	// Сохраняем текущую матрицу моделирования-вида в стеке матриц
	// т.к. следующей строкой она будет модифицирована при помощи glScale
	glPushMatrix();
	// Задаем масштабирование вершин граней
	glScalef(m_size * 0.5f, m_size * 0.5f, m_size * 0.5f);

	m_mesh.DrawWithArrays();

	// Восстанавливаем матрицу моделирования вида из стека матриц
	glPopMatrix();
}
